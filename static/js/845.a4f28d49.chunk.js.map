{"version":3,"file":"static/js/845.a4f28d49.chunk.js","mappings":"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","sources":["Pages/Home.js","components/MoviesList.js","hooks/useFetchTrendingMovies.js","hooks/useFetchMovieInfo.js","hooks/useFetchCast.js","hooks/useFetchReview.js","services/API.js"],"sourcesContent":["import { MoviesList } from 'components/MoviesList';\nimport { useFetchTrendingMovies } from 'hooks';\n\nconst Home = () => {\n  const { movies, isLoading, error } = useFetchTrendingMovies();\n\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Something went wrong...</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst styles = {\n  movies: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: 20,\n    listStyleType: 'none',\n    textDecoration: 'none',\n  },\n  item: {\n    width: 200,\n    height: 'auto',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 22,\n    color: '#feb236',\n    textDecoration: 'none',\n  },\n};\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul style={styles.movies}>\n      {movies.map(({ id, poster_path, title, name, original_title }) => (\n        <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n          <li style={styles.item}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : defaultImg\n              }\n              width={200}\n              alt={title || name || original_title}\n            />\n            <h1 style={styles.title}>{title || name || original_title}</h1>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/API';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return {\n    movies,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\n\nexport const useFetchMovieInfo = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    movie,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/API';\n\nexport const useFetchCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMovieCredits(movieId);\n        setCast(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    cast,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/API';\n\nexport const useFetchReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    reviews,\n    isLoading,\n    error,\n  };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '30f74636e08937577c41f8000490a2f5';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops! Try more');\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops! Try again');\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const {data} = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops! Try again');\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops! Try again');\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops! Try again');\n  }\n};\n"],"names":["useFetchTrendingMovies","movies","isLoading","error","length","styles","display","flexWrap","gap","listStyleType","textDecoration","item","width","height","title","fontWeight","fontSize","color","MoviesList","location","useLocation","style","map","id","poster_path","name","original_title","to","state","from","src","alt","useState","setMovies","setIsLoading","setError","useEffect","fetchData","getTrendingMovies","data","useFetchMovieInfo","movie","setMovie","movieId","useParams","getMovieDetails","useFetchCast","cast","setCast","getMovieCredits","useFetchReviews","reviews","setReviews","getMovieReviews","axios","API_KEY","results","Error","getSearchMovies","query"],"sourceRoot":""}