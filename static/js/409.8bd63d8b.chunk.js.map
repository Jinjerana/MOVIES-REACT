{"version":3,"file":"static/js/409.8bd63d8b.chunk.js","mappings":"yMAKMA,EAAS,CACbC,UAAW,CACTC,QAAS,OACTC,IAAK,GACLC,UAAW,IAEbC,KAAM,CACJC,MAAO,OACPC,OAAQ,QAEVC,WAAY,CACVC,WAAY,IACZC,SAAU,GACVC,MAAO,WAETC,MAAO,CACLH,WAAY,IACZC,SAAU,GACVC,MAAO,UACPE,eAAgB,SAIPC,EAAY,SAAC,GAUnB,IAAD,IATJC,MACEC,EAQE,EARFA,OACAC,EAOE,EAPFA,SACAC,EAME,EANFA,YACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,aACAR,EAGE,EAHFA,MACAS,EAEE,EAFFA,eAGIC,EAAYN,EAAOO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACvD,OACE,iBAAKC,MAAO3B,EAAOC,UAAnB,WACE,gBAAK0B,MAAO3B,EAAOK,KAAnB,UACE,gBACEuB,IACEV,EAAW,0CAC4BA,GA3CjD,8EA8CQZ,MAAO,IACPuB,IAAKjB,GAASS,OAGlB,4BACE,eAAIM,MAAO3B,EAAOQ,WAAlB,SAA+BI,GAASS,KACxC,uBAAIF,KACJ,eAAIQ,MAAO3B,EAAOY,MAAlB,SAAyB,iBACzB,uBAAIQ,KACJ,eAAIO,MAAO3B,EAAOY,MAAlB,SAAyB,cACzB,uBAAIK,KACJ,eAAIU,MAAO3B,EAAOY,MAAlB,SAAyB,YACzB,uBAAIU,SAIX,E,0BC5DKtB,EAAS,CACbC,UAAW,CACTC,QAAS,QACT4B,WAAY,IAEdlB,MAAO,CACLH,WAAY,IACZC,SAAU,GACVC,MAAO,WAEToB,KAAM,CACJtB,WAAY,IACZC,SAAU,GACVC,MAAO,UACPqB,OAAQ,IAEVC,OAAQ,CACNxB,WAAY,IACZC,SAAU,GACVH,OAAQ,GACRD,MAAO,GACPF,UAAW,GACX8B,eAAgB,SAChBC,OAAQ,UACRC,aAAc,EACdC,YAAa,IAyCjB,EArCqB,WAAO,IAAD,IACzB,GAAoCC,EAAAA,EAAAA,MAA5BvB,EAAR,EAAQA,MAAOwB,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,MACpBC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAEnD,OACE,iBAAKC,KAAG,EAACpB,MAAO3B,EAAOC,UAAvB,WACE,SAAC,KAAD,CAAM+C,GAAIL,EAAWM,QAArB,UACE,mBAAQtB,MAAO3B,EAAOiC,OAAQiB,KAAK,SAAnC,SAA4C,cAI7CX,IAAa,uBAAG,eAChBC,IAAS,uBAAG,4BACZzB,IAAS,SAACD,EAAD,CAAWC,MAAOA,KAE5B,eAAIY,MAAO3B,EAAOY,MAAlB,SAAyB,qBAEzB,2BACE,yBACE,SAAC,KAAD,CAAMe,MAAO3B,EAAO+B,KAAMiB,GAAG,OAA7B,SAAoC,YAItC,yBACE,SAAC,KAAD,CAAMrB,MAAO3B,EAAO+B,KAAMiB,GAAG,UAA7B,SAAuC,kBAK3C,SAAC,EAAAG,SAAD,CAAUC,UAAU,uBAAG,eAAvB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieInfo.js","Pages/MovieDetails.js"],"sourcesContent":["import React from 'react';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    gap: 20,\n    marginTop: 20,\n  },\n  item: {\n    width: 'auto',\n    height: 'auto',\n  },\n  movieTitle: {\n    fontWeight: 700,\n    fontSize: 26,\n    color: '#feb236',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 22,\n    color: '#feb236',\n    textDecoration: 'none',\n  },\n};\n\nexport const MovieInfo = ({\n  movie: {\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n    title,\n    original_title,\n  },\n}) => {\n  const allGenres = genres.map(genre => genre.name).join(', ');\n  return (\n    <div style={styles.container}>\n      <div style={styles.item}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : defaultImg\n          }\n          width={300}\n          alt={title || original_title}\n        />\n      </div>\n      <div>\n        <h1 style={styles.movieTitle}>{title || original_title}</h1>\n        <p>{release_date}</p>\n        <h2 style={styles.title}>User Score </h2>\n        <p>{vote_average}</p>\n        <h2 style={styles.title}>Overview</h2>\n        <p>{overview}</p>\n        <h2 style={styles.title}>Genres</h2>\n        <p>{allGenres}</p>\n      </div>\n    </div>\n  );\n};\n","import { MovieInfo } from 'components/MovieInfo';\nimport { useFetchMovieInfo } from 'hooks';\nimport { Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\n\nconst styles = {\n  container: {\n    display: 'block',\n    marginLeft: 20,\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: 26,\n    color: '#feb236',\n  },\n  link: {\n    fontWeight: 700,\n    fontSize: 18,\n    color: '#feb236',\n    margin: 15,\n  },\n  button: {\n    fontWeight: 300,\n    fontSize: 14,\n    height: 25,\n    width: 80,\n    marginTop: 20,\n    justifyContent: 'center',\n    cursor: 'pointer',\n    borderRadius: 5,\n    borderWidth: 2,\n  },\n};\n\nconst MovieDetails = () => {\n  const { movie, isLoading, error } = useFetchMovieInfo();\n  const location = useLocation();\n  const goBackLink = useRef(location?.state?.from ?? '/');\n\n  return (\n    <div div style={styles.container}>\n      <Link to={goBackLink.current}>\n        <button style={styles.button} type=\"button\">\n          Go back\n        </button>\n      </Link>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Something went wrong...</p>}\n      {movie && <MovieInfo movie={movie} />}\n\n      <h1 style={styles.title}>Additional Info</h1>\n\n      <ul>\n        <li>\n          <Link style={styles.link} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link style={styles.link} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["styles","container","display","gap","marginTop","item","width","height","movieTitle","fontWeight","fontSize","color","title","textDecoration","MovieInfo","movie","genres","overview","poster_path","release_date","vote_average","original_title","allGenres","map","genre","name","join","style","src","alt","marginLeft","link","margin","button","justifyContent","cursor","borderRadius","borderWidth","useFetchMovieInfo","isLoading","error","location","useLocation","goBackLink","useRef","state","from","div","to","current","type","Suspense","fallback"],"sourceRoot":""}