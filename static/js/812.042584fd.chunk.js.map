{"version":3,"file":"static/js/812.042584fd.chunk.js","mappings":"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","sources":["Pages/Movies.js","hooks/useFetchByQuery.js","components/MoviesList.js","services/API.js"],"sourcesContent":["import { MoviesList } from 'components/MoviesList';\nimport { useFetchByQuery } from 'hooks/useFetchByQuery';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    gap: 40,\n    alignItems: 'center',\n    height: 200,\n    justifyContent: 'center',\n  },\n  input: {\n    height: 30,\n    width: 300,\n    borderRadius: 5,\n    borderColor: '#6b5b95',\n    color: '#feb236',\n  },\n  button: {\n    fontWeight: 700,\n    fontSize: 18,\n    height: 35,\n    width: 100,\n    cursor: 'pointer',\n    borderRadius: 5,\n    borderColor: '#6b5b95',\n    color: '#feb236',\n  },\n};\n\nconst Movies = () => {\n  const { movies, isLoading, error, onHandleSubmit } = useFetchByQuery();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const value = e.target.query.value.toLowerCase().trim();\n    onHandleSubmit(value);\n  };\n\n  return (\n    <div>\n      <form style={styles.container} onSubmit={handleSubmit}>\n        <input style={styles.input} type=\"text/\" name=\"query\" />\n        <button style={styles.button} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Something went wrong...</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'services/API';\n\nexport const useFetchByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q')\n    if(!query) return \n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getSearchMovies(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n\n  const onHandleSubmit = value => {\n    setSearchParams({q:value})\n  }\n\n  return {\n    movies,\n    isLoading,\n    error,\n    onHandleSubmit\n  };\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst styles = {\n  movies: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: 20,\n    listStyleType: 'none',\n    textDecoration: 'none',\n  },\n  item: {\n    width: 200,\n    height: 'auto',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 22,\n    color: '#feb236',\n    textDecoration: 'none',\n  },\n};\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul style={styles.movies}>\n      {movies.map(({ id, poster_path, title, name, original_title }) => (\n        <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n          <li style={styles.item}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : defaultImg\n              }\n              width={200}\n              alt={title || name || original_title}\n            />\n            <h1 style={styles.title}>{title || name || original_title}</h1>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '30f74636e08937577c41f8000490a2f5';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops! Try more');\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops! Try again');\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const {data} = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops! Try again');\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops! Try again');\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops! Try again');\n  }\n};\n"],"names":["styles","container","display","gap","alignItems","height","justifyContent","input","width","borderRadius","borderColor","color","button","fontWeight","fontSize","cursor","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","query","get","fetchData","getSearchMovies","data","onHandleSubmit","value","q","useFetchByQuery","style","onSubmit","e","preventDefault","target","toLowerCase","trim","type","name","length","MoviesList","flexWrap","listStyleType","textDecoration","item","title","location","useLocation","map","id","poster_path","original_title","to","state","from","src","alt","axios","API_KEY","getTrendingMovies","results","Error","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}